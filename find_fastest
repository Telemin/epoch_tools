#!/usr/bin/env python2

import matplotlib.pyplot as plt
import sdf
import numpy as np

def collect_data(filename):
  sdf_data = sdf.SDF(filename).read()
  particle_data = np.vstack((
    sdf_data['Grid/Particles/subset_high_gamma/electron/X'],
    sdf_data['Grid/Particles/subset_high_gamma/electron/Y'],
    sdf_data['Particles/Px/subset_high_gamma/electron'],
    sdf_data['Particles/ID/subset_high_gamma/electron'].astype(np.int64)))
  particle_data = particle_data[:,particle_data[2].argsort()]
  return particle_data
    

def main():
  particle_data = collect_data('0020.sdf')
  selected_particles = particle_data[:,-20:]
  
  filedata = sdf.SDF('0020.sdf').read()
  x = filedata['Grid/Grid/X']
  y = filedata['Grid/Grid/Y']
  dens = filedata['Derived/Number_Density'].transpose()
  plt.figure()
  ax = plt.gca()
  im = ax.imshow(dens, vmin=1e24, vmax=1e26, extent=[x.min(), x.max(), y.min(), y.max()])
  plt.scatter(particle_data[0],particle_data[1],color='k')
  plt.show()

  for particle in selected_particles[3].astype(np.int64):
    print("begin:subset")
    print("name = sub{0}".format(particle))
    print("id_min = {0}".format(particle))
    print("id_max = {0}".format(particle))
    print("include_species:electron")
    print("end:subset")
    print("")
    print("begin:output")
    print("name = out{0}".format(particle))
    print("dt_snapshot = output_timestep")
    print("particles = sub{0}".format(particle))
    print("px = sub{0}".format(particle))
    print("py = sub{0}".format(particle))
    print("pz = sub{0}".format(particle))
    print("id = sub{0}".format(particle))
    print("end:output")
    print("")
    

if __name__ == "__main__":
  main()
